//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.28 at 12:39:51 PM IST 
//


package uk.co.ladbrokes.cdm.trading.price._2;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * Maintains Strategies i.e coupling types which define which coupling would be applied for selecting the selection 2 price when the selection 1 price is entered. prices are selected based on the coupling type.
 * This is applicable only for two way markets
 * A two way market is a market which can have only two outcomes.
 * 
 * <p>Java class for PriceCoupling complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PriceCoupling"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="couplingDescription" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="couplingType" type="{http://cdm.ladbrokes.co.uk/trading/Price/2.0}PriceCouplingTypeKind" minOccurs="0"/&gt;
 *         &lt;element name="mapping" type="{http://cdm.ladbrokes.co.uk/trading/Price/2.0}PriceCouplingMapping" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PriceCoupling", propOrder = {
    "couplingDescription",
    "couplingType",
    "mapping"
})
public class PriceCoupling {

    protected String couplingDescription;
    @XmlSchemaType(name = "string")
    protected PriceCouplingTypeKind couplingType;
    protected List<PriceCouplingMapping> mapping;

    /**
     * Gets the value of the couplingDescription property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCouplingDescription() {
        return couplingDescription;
    }

    /**
     * Sets the value of the couplingDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCouplingDescription(String value) {
        this.couplingDescription = value;
    }

    /**
     * Gets the value of the couplingType property.
     * 
     * @return
     *     possible object is
     *     {@link PriceCouplingTypeKind }
     *     
     */
    public PriceCouplingTypeKind getCouplingType() {
        return couplingType;
    }

    /**
     * Sets the value of the couplingType property.
     * 
     * @param value
     *     allowed object is
     *     {@link PriceCouplingTypeKind }
     *     
     */
    public void setCouplingType(PriceCouplingTypeKind value) {
        this.couplingType = value;
    }

    /**
     * Gets the value of the mapping property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the mapping property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMapping().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PriceCouplingMapping }
     * 
     * 
     */
    public List<PriceCouplingMapping> getMapping() {
        if (mapping == null) {
            mapping = new ArrayList<PriceCouplingMapping>();
        }
        return this.mapping;
    }

}
