//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.28 at 12:39:51 PM IST 
//


package uk.co.ladbrokes.cdm.banking.wallet._2;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import uk.co.ladbrokes.cdm.common.crossref._2.CrossRefEntityKeys;
import uk.co.ladbrokes.cdm.customer.transaction._2.Transaction;
import uk.co.ladbrokes.cdm.product.catalogue._2.CategoryTypeKind;


/**
 * This class represents a financial transaction that has occured on a wallet. e.g:  DepositFunds, WithdrawFunds, Bet Returns
 * 
 * A Wallet transaction is separated from Payment - A Payment will be required for deposit and withdrawal transaction, but NOT a transfer. A clear distiinction is made between the process (as a transaction) and the actual payment part.
 * 
 * Payment is just part of the overall flow.  This becomes important when the ebanking project looks to externalise payments from openbet, and payments occur with a gateway provider.
 * 
 * Wallet transaction processing will have a dependency on a set of Payment services in the future, and a resulting Payment gateway(s). But not all Wallet transaction will require Payment, so key to separate these concepts
 * .
 * 
 * <p>Java class for WalletTransaction complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="WalletTransaction"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://cdm.ladbrokes.co.uk/customer/Transaction/2.0}Transaction"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="walletTransKey" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="walletTransactionKeys" type="{http://cdm.ladbrokes.co.uk/common/CrossRef/2.0}CrossRefEntityKeys" minOccurs="0"/&gt;
 *         &lt;element name="walletTransDateTime" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/&gt;
 *         &lt;element name="walletKey" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="customerKeys" type="{http://cdm.ladbrokes.co.uk/common/CrossRef/2.0}CrossRefEntityKeys" minOccurs="0"/&gt;
 *         &lt;element name="customerKey" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="custReferenceCode" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="loyaltyCardNo" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="isAnonymous" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="walletTransactionType" type="{http://cdm.ladbrokes.co.uk/banking/Wallet/2.0}WalletTransactionType" minOccurs="0"/&gt;
 *         &lt;element name="walletTransactionStatus" type="{http://cdm.ladbrokes.co.uk/banking/Wallet/2.0}WalletTransactionStatus" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="lastStatusChgDateTime" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/&gt;
 *         &lt;element name="isCompleted" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="hasErrors" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/&gt;
 *         &lt;element name="productCategory" type="{http://cdm.ladbrokes.co.uk/product/Catalogue/2.0}CategoryTypeKind" minOccurs="0"/&gt;
 *         &lt;element name="walletTransCharacteristics" type="{http://cdm.ladbrokes.co.uk/banking/Wallet/2.0}WalletTransactionCharacteristics" minOccurs="0"/&gt;
 *         &lt;element name="obtainedWalletLock" type="{http://cdm.ladbrokes.co.uk/banking/Wallet/2.0}WalletLock" minOccurs="0"/&gt;
 *         &lt;element name="walletTransactionError" type="{http://cdm.ladbrokes.co.uk/banking/Wallet/2.0}WalletTransactionError" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "WalletTransaction", propOrder = {
    "walletTransKey",
    "walletTransactionKeys",
    "walletTransDateTime",
    "walletKey",
    "customerKeys",
    "customerKey",
    "custReferenceCode",
    "loyaltyCardNo",
    "isAnonymous",
    "walletTransactionType",
    "walletTransactionStatus",
    "lastStatusChgDateTime",
    "isCompleted",
    "hasErrors",
    "productCategory",
    "walletTransCharacteristics",
    "obtainedWalletLock",
    "walletTransactionError"
})
@XmlSeeAlso({
    DepositFunds.class,
    GamePlayFunding.class,
    BatchAdjustFunds.class,
    TransferFunds.class,
    AdjustFunds.class,
    BetFunding.class,
    BetReturns.class,
    SuspendFunds.class,
    WithdrawFunds.class,
    GamePlayReturns.class
})
public abstract class WalletTransaction
    extends Transaction
{

    protected String walletTransKey;
    protected CrossRefEntityKeys walletTransactionKeys;
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar walletTransDateTime;
    protected String walletKey;
    protected CrossRefEntityKeys customerKeys;
    protected String customerKey;
    protected String custReferenceCode;
    protected String loyaltyCardNo;
    protected Boolean isAnonymous;
    protected WalletTransactionType walletTransactionType;
    protected List<WalletTransactionStatus> walletTransactionStatus;
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar lastStatusChgDateTime;
    protected Boolean isCompleted;
    protected Boolean hasErrors;
    @XmlSchemaType(name = "string")
    protected CategoryTypeKind productCategory;
    protected WalletTransactionCharacteristics walletTransCharacteristics;
    protected WalletLock obtainedWalletLock;
    protected List<WalletTransactionError> walletTransactionError;

    /**
     * Gets the value of the walletTransKey property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getWalletTransKey() {
        return walletTransKey;
    }

    /**
     * Sets the value of the walletTransKey property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWalletTransKey(String value) {
        this.walletTransKey = value;
    }

    /**
     * Gets the value of the walletTransactionKeys property.
     * 
     * @return
     *     possible object is
     *     {@link CrossRefEntityKeys }
     *     
     */
    public CrossRefEntityKeys getWalletTransactionKeys() {
        return walletTransactionKeys;
    }

    /**
     * Sets the value of the walletTransactionKeys property.
     * 
     * @param value
     *     allowed object is
     *     {@link CrossRefEntityKeys }
     *     
     */
    public void setWalletTransactionKeys(CrossRefEntityKeys value) {
        this.walletTransactionKeys = value;
    }

    /**
     * Gets the value of the walletTransDateTime property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getWalletTransDateTime() {
        return walletTransDateTime;
    }

    /**
     * Sets the value of the walletTransDateTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setWalletTransDateTime(XMLGregorianCalendar value) {
        this.walletTransDateTime = value;
    }

    /**
     * Gets the value of the walletKey property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getWalletKey() {
        return walletKey;
    }

    /**
     * Sets the value of the walletKey property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWalletKey(String value) {
        this.walletKey = value;
    }

    /**
     * Gets the value of the customerKeys property.
     * 
     * @return
     *     possible object is
     *     {@link CrossRefEntityKeys }
     *     
     */
    public CrossRefEntityKeys getCustomerKeys() {
        return customerKeys;
    }

    /**
     * Sets the value of the customerKeys property.
     * 
     * @param value
     *     allowed object is
     *     {@link CrossRefEntityKeys }
     *     
     */
    public void setCustomerKeys(CrossRefEntityKeys value) {
        this.customerKeys = value;
    }

    /**
     * Gets the value of the customerKey property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCustomerKey() {
        return customerKey;
    }

    /**
     * Sets the value of the customerKey property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCustomerKey(String value) {
        this.customerKey = value;
    }

    /**
     * Gets the value of the custReferenceCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCustReferenceCode() {
        return custReferenceCode;
    }

    /**
     * Sets the value of the custReferenceCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCustReferenceCode(String value) {
        this.custReferenceCode = value;
    }

    /**
     * Gets the value of the loyaltyCardNo property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLoyaltyCardNo() {
        return loyaltyCardNo;
    }

    /**
     * Sets the value of the loyaltyCardNo property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLoyaltyCardNo(String value) {
        this.loyaltyCardNo = value;
    }

    /**
     * Gets the value of the isAnonymous property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsAnonymous() {
        return isAnonymous;
    }

    /**
     * Sets the value of the isAnonymous property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsAnonymous(Boolean value) {
        this.isAnonymous = value;
    }

    /**
     * Gets the value of the walletTransactionType property.
     * 
     * @return
     *     possible object is
     *     {@link WalletTransactionType }
     *     
     */
    public WalletTransactionType getWalletTransactionType() {
        return walletTransactionType;
    }

    /**
     * Sets the value of the walletTransactionType property.
     * 
     * @param value
     *     allowed object is
     *     {@link WalletTransactionType }
     *     
     */
    public void setWalletTransactionType(WalletTransactionType value) {
        this.walletTransactionType = value;
    }

    /**
     * Gets the value of the walletTransactionStatus property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the walletTransactionStatus property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWalletTransactionStatus().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WalletTransactionStatus }
     * 
     * 
     */
    public List<WalletTransactionStatus> getWalletTransactionStatus() {
        if (walletTransactionStatus == null) {
            walletTransactionStatus = new ArrayList<WalletTransactionStatus>();
        }
        return this.walletTransactionStatus;
    }

    /**
     * Gets the value of the lastStatusChgDateTime property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getLastStatusChgDateTime() {
        return lastStatusChgDateTime;
    }

    /**
     * Sets the value of the lastStatusChgDateTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setLastStatusChgDateTime(XMLGregorianCalendar value) {
        this.lastStatusChgDateTime = value;
    }

    /**
     * Gets the value of the isCompleted property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsCompleted() {
        return isCompleted;
    }

    /**
     * Sets the value of the isCompleted property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsCompleted(Boolean value) {
        this.isCompleted = value;
    }

    /**
     * Gets the value of the hasErrors property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isHasErrors() {
        return hasErrors;
    }

    /**
     * Sets the value of the hasErrors property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setHasErrors(Boolean value) {
        this.hasErrors = value;
    }

    /**
     * Gets the value of the productCategory property.
     * 
     * @return
     *     possible object is
     *     {@link CategoryTypeKind }
     *     
     */
    public CategoryTypeKind getProductCategory() {
        return productCategory;
    }

    /**
     * Sets the value of the productCategory property.
     * 
     * @param value
     *     allowed object is
     *     {@link CategoryTypeKind }
     *     
     */
    public void setProductCategory(CategoryTypeKind value) {
        this.productCategory = value;
    }

    /**
     * Gets the value of the walletTransCharacteristics property.
     * 
     * @return
     *     possible object is
     *     {@link WalletTransactionCharacteristics }
     *     
     */
    public WalletTransactionCharacteristics getWalletTransCharacteristics() {
        return walletTransCharacteristics;
    }

    /**
     * Sets the value of the walletTransCharacteristics property.
     * 
     * @param value
     *     allowed object is
     *     {@link WalletTransactionCharacteristics }
     *     
     */
    public void setWalletTransCharacteristics(WalletTransactionCharacteristics value) {
        this.walletTransCharacteristics = value;
    }

    /**
     * Gets the value of the obtainedWalletLock property.
     * 
     * @return
     *     possible object is
     *     {@link WalletLock }
     *     
     */
    public WalletLock getObtainedWalletLock() {
        return obtainedWalletLock;
    }

    /**
     * Sets the value of the obtainedWalletLock property.
     * 
     * @param value
     *     allowed object is
     *     {@link WalletLock }
     *     
     */
    public void setObtainedWalletLock(WalletLock value) {
        this.obtainedWalletLock = value;
    }

    /**
     * Gets the value of the walletTransactionError property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the walletTransactionError property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWalletTransactionError().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WalletTransactionError }
     * 
     * 
     */
    public List<WalletTransactionError> getWalletTransactionError() {
        if (walletTransactionError == null) {
            walletTransactionError = new ArrayList<WalletTransactionError>();
        }
        return this.walletTransactionError;
    }

}
