//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.28 at 12:39:51 PM IST 
//


package uk.co.ladbrokes.cdm.common.location._2;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for LocationTypeKind.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="LocationTypeKind"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Stadium"/&gt;
 *     &lt;enumeration value="Court"/&gt;
 *     &lt;enumeration value="City"/&gt;
 *     &lt;enumeration value="Country"/&gt;
 *     &lt;enumeration value="Racecourse"/&gt;
 *     &lt;enumeration value="Track"/&gt;
 *     &lt;enumeration value="Field"/&gt;
 *     &lt;enumeration value="Ground"/&gt;
 *     &lt;enumeration value="Town"/&gt;
 *     &lt;enumeration value="CustomerAddress"/&gt;
 *     &lt;enumeration value="CustomerDevice"/&gt;
 *     &lt;enumeration value="RAD"/&gt;
 *     &lt;enumeration value="RetailShop"/&gt;
 *     &lt;enumeration value="ShopServer"/&gt;
 *     &lt;enumeration value="ShopTill"/&gt;
 *     &lt;enumeration value="FBOT"/&gt;
 *     &lt;enumeration value="SSBT"/&gt;
 *     &lt;enumeration value="Course"/&gt;
 *     &lt;enumeration value="Venue"/&gt;
 *     &lt;enumeration value="Veladrome"/&gt;
 *     &lt;enumeration value="Ring"/&gt;
 *     &lt;enumeration value="Uri"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "LocationTypeKind")
@XmlEnum
public enum LocationTypeKind {


    /**
     * Location is a sporting stadium
     * 
     */
    @XmlEnumValue("Stadium")
    STADIUM("Stadium"),

    /**
     * Location is a court
     * 
     */
    @XmlEnumValue("Court")
    COURT("Court"),

    /**
     * Location is a city.
     * 
     */
    @XmlEnumValue("City")
    CITY("City"),

    /**
     * Location is a city.
     * 
     */
    @XmlEnumValue("Country")
    COUNTRY("Country"),

    /**
     * Location is a race course
     * 
     */
    @XmlEnumValue("Racecourse")
    RACECOURSE("Racecourse"),

    /**
     * Location a track?
     * 
     */
    @XmlEnumValue("Track")
    TRACK("Track"),

    /**
     * Location is a field
     * 
     */
    @XmlEnumValue("Field")
    FIELD("Field"),

    /**
     * Location is a sporting ground
     * 
     */
    @XmlEnumValue("Ground")
    GROUND("Ground"),

    /**
     * is the location a town?
     * 
     */
    @XmlEnumValue("Town")
    TOWN("Town"),

    /**
     * The Location is a Customer address
     * 
     */
    @XmlEnumValue("CustomerAddress")
    CUSTOMER_ADDRESS("CustomerAddress"),

    /**
     * Customer device location used for betting?
     * 
     */
    @XmlEnumValue("CustomerDevice")
    CUSTOMER_DEVICE("CustomerDevice"),

    /**
     * Retail Area Location
     * 
     */
    RAD("RAD"),

    /**
     * Retail Store Location
     * 
     */
    @XmlEnumValue("RetailShop")
    RETAIL_SHOP("RetailShop"),

    /**
     * Retail Store Location
     * 
     */
    @XmlEnumValue("ShopServer")
    SHOP_SERVER("ShopServer"),

    /**
     * Retail Store Location
     * 
     */
    @XmlEnumValue("ShopTill")
    SHOP_TILL("ShopTill"),

    /**
     * Fixed Odds Betting Terminal
     * 
     */
    FBOT("FBOT"),

    /**
     * Self Service Betting Terminal
     * 
     */
    SSBT("SSBT"),
    @XmlEnumValue("Course")
    COURSE("Course"),
    @XmlEnumValue("Venue")
    VENUE("Venue"),
    @XmlEnumValue("Veladrome")
    VELADROME("Veladrome"),
    @XmlEnumValue("Ring")
    RING("Ring"),
    @XmlEnumValue("Uri")
    URI("Uri");
    private final String value;

    LocationTypeKind(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LocationTypeKind fromValue(String v) {
        for (LocationTypeKind c: LocationTypeKind.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
