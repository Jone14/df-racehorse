//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.28 at 12:39:51 PM IST 
//


package uk.co.ladbrokes.services.service.commonmessage._2;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ErrorSeverityKind.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ErrorSeverityKind"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Fatal"/&gt;
 *     &lt;enumeration value="Error"/&gt;
 *     &lt;enumeration value="Warning"/&gt;
 *     &lt;enumeration value="Info"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "ErrorSeverityKind")
@XmlEnum
public enum ErrorSeverityKind {


    /**
     * A fatal error has occured which indicates enterprise wide service issues (e.g. OutOfMemory)
     * 
     */
    @XmlEnumValue("Fatal")
    FATAL("Fatal"),

    /**
     * A Business or Technical error that may or may not be recovrable/ retryable
     * 
     */
    @XmlEnumValue("Error")
    ERROR("Error"),

    /**
     * Some elements of the processing were successful, while others may not have (or is unknown) but could be handled gracefully or is not considered critical.  
     * 
     * A Service contract shall detail all such 'Warning' type scenarios and how to respond. 
     * 
     */
    @XmlEnumValue("Warning")
    WARNING("Warning"),

    /**
     * For information only
     * 
     */
    @XmlEnumValue("Info")
    INFO("Info");
    private final String value;

    ErrorSeverityKind(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ErrorSeverityKind fromValue(String v) {
        for (ErrorSeverityKind c: ErrorSeverityKind.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
